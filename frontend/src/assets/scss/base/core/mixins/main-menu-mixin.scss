//  =========================================================================================
// File Name: main-menu-mixin.scss
// Description: Common mixin for menus, contain dark and light version scss.
//==========================================================================================

// Header navbar content and brand expanded & collapsed stats
// spacing and sizing.
// ================================================

// Mixins for the menu and navbar position, margin and width change
@mixin main-menu-width($menu-width) {
	margin-left: $menu-width;
}
@mixin menu-navbar-width($menu-width) {
	float: left;
	width: $menu-width;
}
// Mixins for the menu show hide based on width
@mixin vertical-menu-transform-show($transform-width) {
	backface-visibility: hidden;
	perspective: 1000;
	transform: translate3d($transform-width, 0, 0);
}
@mixin vertical-menu-transform-hide() {
	transform: translate3d(0, 0, 0);
}

// Mixins for the sub menu arrow
@mixin vertical-menu-has-sub-arrow($arrow-font-size) {
	&.has-sub {
		> a::after {
			background-image: url(str-replace(str-replace($chevron-right, 'currentColor', $body-color), '#', '%23'));
			background-position: center;
			background-repeat: no-repeat;
			background-size: $arrow-font-size;
			content: '';
			display: inline-block;
			height: $arrow-font-size;
			position: absolute;
			right: 20px;
			top: 14px;
			transform: rotate(0deg);
			transition: all 0.2s ease-out;
			width: $arrow-font-size;
		}

		&.open:not(.menu-item-closing) {
			> a::after {
				transform: rotate(90deg);
			}
		}
	}
}
// Used for apps
@mixin content-area-wrapper-height(
	$contentPadding: 0,
	$navbarHeight: 0,
  $footerHeight: 0,
  $floatingNavMargin: 0,
  $horizontalMenuHeight: 0,
  $spacingSides: 1,
  $horizontalLayout: false
) {
	height: calc(100vh -
	calc(calc(#{$contentPadding} * #{$spacingSides}) + #{$navbarHeight} + #{$footerHeight} + #{$floatingNavMargin} + #{$horizontalMenuHeight}));
	height: calc(var(--vh, 1vh) * 100 -
	calc(calc(#{$contentPadding} * #{$spacingSides}) + #{$navbarHeight} + #{$footerHeight} + #{$floatingNavMargin} + #{$horizontalMenuHeight}));
	// responsive size height
	@if $horizontalLayout {
		@include media-breakpoint-down(lg) {
			height: calc(100vh - calc(calc(calc(#{$contentPadding} - 0.8rem) * #{$spacingSides}) + #{$navbarHeight} + #{$footerHeight}));
			height: calc(var(--vh, 1vh) * 100 -
			calc(calc(calc(#{$contentPadding} - 0.8rem) * #{$spacingSides}) + #{$navbarHeight} + #{$footerHeight}));
		}
	} @else {
		@include media-breakpoint-down(xs) {
			height: calc(100vh -
			calc(calc(calc(#{$contentPadding} * #{$spacingSides}) - calc(0.8rem * #{$spacingSides})) + #{$navbarHeight} + #{$footerHeight} +
			#{$floatingNavMargin} + #{$horizontalMenuHeight}));
			height: calc(var(--vh, 1vh) * 100 -
			calc(calc(calc(#{$contentPadding} * #{$spacingSides}) - calc(0.8rem * #{$spacingSides})) + #{$navbarHeight} + #{$footerHeight} +
			#{$floatingNavMargin} + #{$horizontalMenuHeight}));
		}
	}
}

// Light & Dark menu mixin
// $theme-color : Menu text color
// $theme-bg    : Menu background color
// ================================================
@mixin menu-theme($theme-color, $theme-bg) {
	$main-menu-top-open-color: darken($theme-color, 10%);
	$main-menu-top-open-hover-bg: darken($theme-bg, 6%);
	$main-menu-top-open-head-bg: darken($theme-bg, 4%);

	$main-menu-top-active-head-bg: darken($theme-bg, 4%); //$primary

	$main-menu-sub-color: $theme-color;
	$main-menu-sub-hover-color: lighten($theme-color, 4%);

	$main-menu-sub-open-color: $theme-color;
	background: $theme-bg;

	color: $theme-color;

	.navigation {
		background: $theme-bg;

		.navigation-header {
			color: lighten($theme-color, 21.5%);
			letter-spacing: 0.01rem;
			line-height: 1.5;
			margin: calc(#{$content-padding} + 0.286rem) 0 0.8rem ($content-padding + 0.2rem);
			padding: 0;

			span {
				font-weight: 500;
			}
		}

		li {
			&.has-sub {
				> a {
					transition: all 0.5s ease, background 0s, color 0s;
				}
			}

			a {
				background-color: #F2F4F8;
				color: #727272;
				line-height: 1.45;
				padding: $menu-padding;

				span.menu-sub-title {
					color: lighten($theme-color, 30%);
				}

				& > * {
					transition: transform 0.25s ease;
				}
			}
		}

		// Menu Item Hover Animation
		li.nav-item {
			a:hover > * {
				/*transform: translateX(5px);*/
				background-color: #e4e5e6;
				transition: transform 0.25s ease;
			}

			ul.menu-content {
				li {
					a:hover > * {
						/*transform: translateX(5px);*/
						background-color: #e4e5e6;
						transition: transform 0.25s ease;
					}
				}
			}
		}

		> li {
			> a {
				margin: 0 15px;

				.label {
					margin-right: 5px;
					margin-top: 4px;
				}

				i,
				svg {
					position: relative;
					top: 1px;
				}
			}

			> ul li {
				&:first-of-type {
					margin-top: 7px !important;
				}

				&:not(.has-sub) {
					margin: 0 15px;
				}

				&.has-sub {
					> a {
						margin: 0 15px;
					}

					> ul > li {
						margin: 0 15px;
					}
				}
			}

			&.open:not(.menu-item-closing),
			&.sidebar-group-active {
				> a {
					background: $main-menu-top-open-head-bg;
					border-radius: 6px;
					color: $main-menu-top-open-color;
				}
			}

			&:not(.open) {
				> ul {
					display: none;

					.active {
						background: transparent;
						box-shadow: none;
					}
				}
			}

			&.active {
				z-index: 1;

				> a {
					background-color: #e4e5e6;
					/*font-weight: 400;*/
					border-radius: 4px;
					/*box-shadow: 0 0 10px 1px rgba($primary, 0.7);*/
					color: #5ea68c;
				}
			}

			.active {
				background-color: #e4e5e6;

				> a {
					color: #5ea68c;
					margin-bottom: 0;
				}

				.hover,
				:hover {
					> a {
						background-color: #e4e5e6;
					}
				}
			}

			ul {
				margin: 0;
				padding: 0;

				li {
					background: transparent;
					color: $main-menu-sub-color;

					> a {
						padding: $menu-second-level-padding;
					}

					ul {
						a {
							padding: $menu-third-level-padding;
						}
					}
				}

				.has-sub {
					&:not(.open) {
						> ul {
							display: none;

							.active {
								background: transparent;
								box-shadow: none;
							}
						}
					}
				}

				.open,
				.sidebar-group-active {
					> a {
						background: $main-menu-top-active-head-bg;
						border-radius: 6px;
						color: #727272;
					}
					//for 2rd level menu
					> ul {
						display: block;
						//for 3rd level menu
						.open {
							> ul {
								display: block;
							}
						}
					}
				}

				.hover,
				&:hover {
					> a {
						color: #727272;
					}
				}

				.active {
					background-color: #e4e5e6;
					/*box-shadow: 0 0 10px 1px rgba($primary, 0.7);*/
					border-radius: 4px;
					z-index: 1;

					> a {
						color: #727272;
					}
				}
			}
		}
	}
}
// Menu content display mixin
// $menu-expanded-width : Expanded menu width
// $menu-collapsed-width: Collapsed menu width
// ================================================
@mixin menu-content($menu-expanded-width, $menu-collapsed-width, $theme-color, $theme-bg) {
	.main-menu-content {
		> span.menu-title,
		a.menu-title {
			background-color: #e4e5e6;
			color: #727272;
			font-weight: 600;
			padding: 13px 20px;
			right: -($menu-expanded-width);
			text-align: left;
			text-transform: uppercase;
			width: $menu-expanded-width;
		}

		> ul.menu-content {
			border-bottom: 2px solid rgba($black, 0.2);
			border-left: 1px solid rgba($black, 0.02);
			box-shadow: 1px 0 2px rgba($black, 0.1);
			left: $menu-collapsed-width;
			transition: visibility 0.25s, opacity 0.25s;
			width: $menu-expanded-width;

			li {
				position: relative;
				white-space: nowrap;

				a {
					display: block;
					padding: 8px 20px;
				}

				@include vertical-menu-has-sub-arrow(1rem);
			}
		}
	}
}